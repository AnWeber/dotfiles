{
  "logError": {
    "prefix": [
      "_logError"
    ],
    "body": [
      "import { debug } from \"debug\";",
      "const logError = debug(\"${TM_FILENAME_BASE}:error\");"
    ],
    "description": "create error debug"
  },
  "logWarn": {
    "prefix": [
      "_logWarn"
    ],
    "body": [
      "import { debug } from \"debug\";",
      "const logWarn = debug(\"${TM_FILENAME_BASE}:warn\");"
    ],
    "description": "create error debug"
  },
  "logInfo": {
    "prefix": [
      "_log",
      "_logInfo"
    ],
    "body": [
      "import { debug } from \"debug\";",
      "const logInfo = debug(\"${TM_FILENAME_BASE}:info\");"
    ],
    "description": "create info debug"
  },
  "count": {
    "prefix": [
      "_count"
    ],
    "body": [
      "1234567890"
    ],
    "description": "create 10 numbers"
  },
  "getterSetter": {
    "prefix": "_get",
    "body": [
      "private _${1:name}?: ${2:type};",
      "public get ${1:name}(): ${2:type} | undefined{",
      "\treturn this._${1:name};",
      "}",
      "public set ${1:name}(${1:name}:${2:type}){",
      "\tthis._${1:name} = ${1:name};",
      "}"
    ],
    "description": "Basic Lit component using decorator"
  },
  "litComponentDecorator": {
    "prefix": "_lit",
    "body": [
      "import { LitElement, html, TemplateResult } from 'lit';\n",
      "@customElementIfNotExists('${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}')",
      "export class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends LitElement {\n",
      "\tpublic override render(): TemplateResult {",
      "\t\treturn html``",
      "\t}",
      "}"
    ],
    "description": "Lit Compoennt"
  },
  "litStyles": {
    "prefix": "_litStyle",
    "body": [
      "public static override styles = unsafeCSS(componentCss);"
    ],
    "description": "Lit Styles"
  },
  "importStyles": {
    "prefix": "_importStyle",
    "body": [
      "import componentCss from './${TM_FILENAME_BASE/.scss?inline//gi}';"
    ],
    "description": "Lit Styles"
  },
  "litPropertyGetter": {
    "prefix": "_litGet",
    "body": [
      "private _${1:name}?: ${2:type};",
      "public get ${1:name}(): ${2:type} | undefined{",
      "\treturn this._${1:name};",
      "}",
      "@property()",
      "public set ${1:name}(${1:name}:${2:type}){",
      "\tthis._${1:name} = ${1:name};",
      "}"
    ],
    "description": "Lit Property Getter"
  },
  "litProperty": {
    "prefix": "_litProperty",
    "body": [
      "@property()",
      "public ${1:name}: ${2:type};",
    ],
    "description": "Lit Property"
  },
  "litState": {
    "prefix": "_litState",
    "body": [
      "@state()",
      "private _${1:name}?: ${2:type};",
    ],
    "description": "Lit State"
  },
  "litConnectedCallback": {
    "prefix": "_litConnect",
    "body": [
      "public override connectedCallback(): void {",
      "\tsuper.connectedCallback();",
      "}",
    ],
    "description": "Lit connectedCallback"
  },
  "litSpec": {
    "prefix": "_spec",
    "body": [
      "import { ${TM_FILENAME_BASE/(.*).spec/${1:/pascalcase}/g} } from './${TM_FILENAME_BASE/.spec//gi}';\n",
      "describe(\"${TM_FILENAME_BASE/.spec//gi}\", () => {",
      "  it(\"should create\", () => {",
      "    expect(${TM_FILENAME_BASE/(.*).spec/${1:/pascalcase}/g}).toBeDefined();",
      "  });",
      "});"
    ],
    "description": "create spec file"
  },
  "litSpecComponent": {
    "prefix": "_specComponent",
    "body": [
      "import { ${TM_FILENAME_BASE/(.*).spec/${1:/pascalcase}/g} } from \"./${TM_FILENAME_BASE/.spec//gi}\";",
      "",
      "describe(\"${TM_FILENAME_BASE/.spec//gi}\", () => {",
      "let element: ${TM_FILENAME_BASE/(.*).spec/${1:/pascalcase}/g};",
      "beforeEach(async () => {",
      "element = document.createElement(\"rs-${TM_FILENAME_BASE/.spec//gi}\");",
      "document.body.appendChild(element);",
      "await element.updateComplete;",
      "});",
      "",
      "afterEach(() => {",
      "element?.remove();",
      "});",
      "",
      "it(\"should create\", () => {",
      "expect(element).instanceOf(${TM_FILENAME_BASE/(.*).spec/${1:/pascalcase}/g});",
      "});",
      "});"
    ],
    "description": "create spec file"
  }
}